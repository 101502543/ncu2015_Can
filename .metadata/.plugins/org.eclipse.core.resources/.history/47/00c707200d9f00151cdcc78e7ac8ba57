package cof.can.udpus;

import java.net.*;

public class UDP_Update_Server_Module {
	int port;// connection port
    Dynamic_Object_Module DOM = new Dynamic_Object_Module();
    
//	public void initUDPServer() throws Exception {
//		UDP_Update_Server_Module server = new UDP_Update_Server_Module(8888); 
//		server.run(); // execute the server
//	}

	public static void main(String args[])throws Exception {
		UDP_Update_Server_Module server = new UDP_Update_Server_Module(8888); 
		server.run(); // execute the server
	}
	
	public UDP_Update_Server_Module(int openPortNum) {
		port = openPortNum; // set the port
	}

	public void run() throws Exception {
		final int msgSize = 8000; // message MAX size 8000.
		byte buffer[] = new byte[msgSize]; // set the message buffer

		while (true) {
			DatagramPacket packet = new DatagramPacket(buffer, buffer.length);
			//set the receive UDP server
			DatagramSocket socket = new DatagramSocket(port);
			socket.receive(packet); // receive packet。
			// transfer the receive message to String。
			String receiveMsg = new String(buffer, 0, packet.getLength()); 
			System.out.println(receiveMsg);
			judgeCommand(receiveMsg);
			socket.close();
		}
	}
	
	public void judgeCommand(String receiveMsg){
	
		//receiveMsg不是只有add and update這兩種訊息！！！！
		//應該要還能拆出clientno才是
		//int clientno=0;
		
		//call addVirutalCharavter or addItem to DOM
		if (receiveMsg.substring(1,2).equals("A")) {
			System.out.println("add");
			System.out.println(receiveMsg.substring(14,15));
			System.out.println(receiveMsg.substring(25,26));
			//DOM.addVirutalCharacter(Integer.parseInt(receiveMsg.substring(27,28)));
			//DOM.addItem("item", Integer.parseInt(receiveMsg.substring(16,17)), true);
		}
		
		//call updateVirutalCharavter or updateItem to DOM
		else if(receiveMsg.substring(1,2).equals("U")){
			System.out.println("update");
			//DOM.updateVirtualCharacter(z, dir, speed, x, y);
		    //DOM.updateItem(index, shared, owner);
		}
	}
   
}
