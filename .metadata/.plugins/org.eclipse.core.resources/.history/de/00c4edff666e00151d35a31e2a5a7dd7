//FreeGeng 2015/10/9
import java.io.*;
import java.net.*;
import java.util.Calendar;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;

public class UDP_client extends Thread {

	int port; // port
	InetAddress serverAddress; // represent server's ip address
	public static String msg; // represent the message which we want to send
	public static int x = 0, y = 0;
	public String a[] = new String[100];

	public static void main(String args[]) throws Exception {

		Timer timer = new Timer();// set the time counter
		timer.schedule(new DateTask(), 2000, 2000);
        timer.schedule(new connect(), 0, 200);

			// bulid the client，set the server and message
			//UDP_client client = new UDP_client(args[0], 8888, msg);
			//client.run(); // 啟動 UdpClient 開始傳送。

	}

	public UDP_client(String openServer, int openPortNum ,String sendMsg)
			throws Exception {
		port = openPortNum; // set the port
		serverAddress = InetAddress.getByName(openServer); // transfer the
															// address to ip
		msg = sendMsg; // set the message which we want to send
	}

	public void run() {
		try {
			byte buffer[] = msg.getBytes(); // transfer msg to byte
			// build the packet to DatagramPacket
			// set the destination
			DatagramPacket packet = new DatagramPacket(buffer, buffer.length,
					serverAddress, port);
			DatagramSocket socket = new DatagramSocket(); // build the server
			socket.send(packet);
			socket.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}

class DateTask extends TimerTask {
	UDP_client UDP_client;

	public void run() {
		if (UDP_client.x == 100) {
			UDP_client.x = 0;
			UDP_client.y = 0;
		}
		UDP_client.x = UDP_client.x + 1;
		UDP_client.y = UDP_client.y + 1;
		//System.out.println(UDP_client.x+","+UDP_client.y);
	}
}

class connect extends TimerTask {
	UDP_client UDP_client;
	
	public void run() {
		UDP_client.msg = "("+ UDP_client.x + "," + UDP_client.y + ")";
		System.out.println(UDP_client.msg);
	}
}