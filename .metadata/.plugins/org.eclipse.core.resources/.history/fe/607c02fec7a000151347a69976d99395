package cof.can.udpus;

import java.net.*;

public class UDP_Update_Server_Module {
	int port;// connection port
	boolean judgeOrNot;
	public static boolean judgeFlag = false;
    Dynamic_Object_Module dom;
	
	public static boolean addVirtualCharacterFlag = false, addItemFlag = false,
			updateVirtualCharacterFlag = false, updateItemFlag = false;

	public void initUDPServer() throws Exception {
		UDP_Update_Server_Module server = new UDP_Update_Server_Module(8888);
		server.run(); // execute the server
	}

	public UDP_Update_Server_Module(int openPortNum) {
		port = openPortNum; // set the port
	}

	public void run() throws Exception {
		final int msgSize = 8000; // message MAX size 8000.
		byte buffer[] = new byte[msgSize]; // set the message buffer

		while (true) {
			DatagramPacket packet = new DatagramPacket(buffer, buffer.length);
			// set the receive UDP server
			DatagramSocket socket = new DatagramSocket(port);
			socket.receive(packet); // receive packet。
			// transfer the receive message to String。
			String receiveMsg = new String(buffer, 0, packet.getLength());
			System.out.println(receiveMsg);
			judgeCommand(receiveMsg);
			socket.close();
		}
	}

	public void judgeCommand(String receiveMsg) {
		 if (!receiveMsg.equals(null)) {
		 judgeFlag= true;
		 } else {
		 judgeFlag=false;
		 }

	}

}
