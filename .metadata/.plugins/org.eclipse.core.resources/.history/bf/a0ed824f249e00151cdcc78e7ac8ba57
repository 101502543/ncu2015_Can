package cof.can.udpbc;

//FreeGeng 2015/12/2
//encoding UTTF-8

import java.util.Scanner;
import java.net.*;
import java.util.Timer;
import java.util.TimerTask;

public class UDP_Broadcast_Client_Module extends Thread {

	int port; // port
	InetAddress serverAddress; // represent server's ip address
	private String msg; // represent the message which we want to send
	private String ip1, ip2;// represent the ip address1 and the ip address2

	public static void startUDPBroadCast() throws Exception {
		UDP_Broadcast_Client_Module udp = new UDP_Broadcast_Client_Module();
		TCP_Server_module TCPSM = new TCP_Server_module();
		Centralized_Data_Center CDC = new Centralized_Data_Center();
	}

	public UDP_Broadcast_Client_Module() {
		int startTime1 = 2000, startTime2 = 0, duration1 = 2000, duration2 = 200;
		Scanner scanner = new Scanner(System.in);
		ip1 = scanner.nextLine();// get server1's ip
		ip2 = scanner.nextLine();// get server2's ip
		scanner.close();
		Timer timer = new Timer();// set the time counter
		timer.schedule(new connect(this), startTime2, duration2);
	}

	public UDP_Broadcast_Client_Module(String openServer, int openPortNum,
			String sendMsg) throws Exception {
		port = openPortNum; // set the port
		serverAddress = InetAddress.getByName(openServer); // transfer
		msg = sendMsg; // set the message which we want to send
	}

	public void run() {
		try {
			byte buffer[] = msg.getBytes(); // transfer msg to byte
			// build the packet to DatagramPacket
			// set the destination
			DatagramPacket packet = new DatagramPacket(buffer, buffer.length,
					serverAddress, port);
			DatagramSocket socket = new DatagramSocket(); // build the server

			socket.send(packet);
			socket.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public String getIPOne() {
		return ip1;
	}

	public String getIPTwo() {
		return ip2;
	}

}

class connect extends TimerTask {

	UDP_Broadcast_Client_Module u;

	// let this udp be a pointer that point to line17's udp
	public connect(UDP_Broadcast_Client_Module u) {
		this.u = u;
	}

	public void run() {
		UDP_Broadcast_Client_Module client1;
		UDP_Broadcast_Client_Module client2;

		String msg = "(" + ")";
		try {
			client1 = new UDP_Broadcast_Client_Module(u.getIPOne(), 8888, msg);
			client2 = new UDP_Broadcast_Client_Module(u.getIPTwo(), 8888, msg);
			client1.run(); // start UdpClient
			client2.run(); // start UdpClient
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
}