package cof.can.test;

import static org.junit.Assert.*;

import java.util.Timer;
import java.util.TimerTask;

import org.junit.Before;
import org.junit.Test;

import cof.can.udpbc.UDP_Broadcast_Client_Module;
import cof.can.udpus.Dynamic_Object_Module;
import cof.can.udpus.UDP_Update_Server_Module;

public class testAll {

	UDP_Broadcast_Client_Module UDPBC;
	UDP_Update_Server_Module UDPUS;
	domMock domMock;
	Dynamic_Object_Module dom;
	Timer timer = new Timer();

	@Before
	public void setUp() throws Exception {
			UDPBC = new UDP_Broadcast_Client_Module();
		UDPUS = new UDP_Update_Server_Module(8888);
		domMock = new domMock();
		domMock.set(dom,UDPUS);

	}

	@Test
	public void test() throws Exception{ 
		//before the msg had been sent
		assertFalse(UDPUS.addVirtualCharacterFlag);
		assertFalse(UDPUS.addItemFlag);
		assertFalse(UDPUS.updateVirtualCharacterFlag);
		assertFalse(UDPUS.updateItemFlag);
		
		//run the UDPBC,UDPUS
		timer.schedule(new control(UDPBC, UDPUS), 0, 1000);
		Thread.sleep(2000);
		// test getIPOne
		assertNotNull(UDPBC.getIPOne());
		// test getIPTwo
		assertNotNull(UDPBC.getIPTwo());
		// test getClientIPTable
		assertNotNull(UDPBC.getClientIPTable());
		// test judgeCommand function in UDPUS is entered or not
		assertTrue(UDPUS.judgeFlag);
		
		//after tje msg had been sent,whether the dom's functions are called aor not
		//the character is added or not
		assertTrue(UDPUS.addVirtualCharacterFlag);
		assertTrue(UDPUS.addItemFlag);	
		assertTrue(UDPUS.updateVirtualCharacterFlag);		
		assertTrue(UDPUS.updateItemFlag);
		

	}

}

class UDPUSsub extends domMoak{
	
}


class control extends TimerTask {
	UDP_Broadcast_Client_Module UDPBC;
	UDP_Update_Server_Module UDPUS;

	public control(UDP_Broadcast_Client_Module UDPBC,
			UDP_Update_Server_Module UDPUS) {
		this.UDPBC = UDPBC;
		this.UDPUS = UDPUS;
	}

	@Override
	public void run() {
		try {
			UDPBC.startUDPBroadCast();
			UDPUS.initUDPServer();

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
}

class domMock implements Dynamic_Object_Module{

	private Dynamic_Object_Module dom;
	public UDP_Update_Server_Module UDPUS;
	
	public void set(Dynamic_Object_Module dom,UDP_Update_Server_Module UDPUS){
		this.dom=dom;
		this.UDPUS=UDPUS;
	}
	
	@Override
	public void addVirtualCharacter(int clientno, boolean flag) {
		// TODO Auto-generated method stub
		UDPUS.addVirtualCharacterFlag=true;
	}

	@Override
	public void addItem(String name, int index, boolean shared, boolean flag) {
		// TODO Auto-generated method stub
		UDPUS.addItemFlag=true;
	}

	@Override
	public void updateVirtualCharacter(int clientno, String dir, int speed,
			int x, int y, boolean flag) {
		// TODO Auto-generated method stub
		UDPUS.updateVirtualCharacterFlag=true;
	}

	@Override
	public void updateItem(int index, boolean shared, String owner, boolean flag) {
		// TODO Auto-generated method stub
		UDPUS.updateItemFlag=true;
	}
	
	
}
